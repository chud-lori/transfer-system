// Package docs Code generated by swaggo/swag. DO NOT EDIT
package docs

import "github.com/swaggo/swag"

const docTemplate = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{escape .Description}}",
        "title": "{{.Title}}",
        "contact": {},
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/accounts": {
            "post": {
                "description": "Add new account with initial balance",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Accounts"
                ],
                "summary": "Create Account",
                "parameters": [
                    {
                        "description": "Account creation payload",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dto.AccountRequest"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/dto.WebResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/dto.WebResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/dto.WebResponse"
                        }
                    }
                }
            }
        },
        "/accounts/{accountId}": {
            "get": {
                "description": "Get an account by its ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Accounts"
                ],
                "summary": "Get Account by ID",
                "operationId": "get-account-by-id",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Account ID",
                        "name": "accountId",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successfully retrieved account",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/dto.WebResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/dto.AccountResponse"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Invalid accountId format",
                        "schema": {
                            "$ref": "#/definitions/dto.WebResponse"
                        }
                    },
                    "404": {
                        "description": "Account not found",
                        "schema": {
                            "$ref": "#/definitions/dto.WebResponse"
                        }
                    }
                }
            }
        },
        "/transactions": {
            "post": {
                "description": "Transfer amount from source account to destination account",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Transactions"
                ],
                "summary": "Create Transaction",
                "parameters": [
                    {
                        "description": "Transaction payload",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dto.TransactionRequest"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/dto.WebResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/dto.WebResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/dto.WebResponse"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "dto.AccountRequest": {
            "description": "Account creation payload",
            "type": "object",
            "properties": {
                "account_id": {
                    "description": "Account ID\n@example 123",
                    "type": "integer"
                },
                "initial_balance": {
                    "description": "Initial balance (string to allow decimal format)\n@example 100.23344",
                    "type": "string"
                }
            }
        },
        "dto.AccountResponse": {
            "type": "object",
            "properties": {
                "account_id": {
                    "type": "integer"
                },
                "balance": {
                    "type": "string"
                }
            }
        },
        "dto.TransactionRequest": {
            "description": "Transaction creation payload",
            "type": "object",
            "properties": {
                "amount": {
                    "description": "@example 100.23344",
                    "type": "string"
                },
                "destination_account_id": {
                    "description": "@example 456",
                    "type": "integer"
                },
                "source_account_id": {
                    "description": "@example 123",
                    "type": "integer"
                }
            }
        },
        "dto.WebResponse": {
            "type": "object",
            "properties": {
                "data": {},
                "message": {
                    "type": "string"
                },
                "status": {
                    "type": "integer"
                }
            }
        }
    }
}`

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = &swag.Spec{
	Version:          "1.0",
	Host:             "localhost:8080",
	BasePath:         "/",
	Schemes:          []string{},
	Title:            "Transfer System API",
	Description:      "A simple API for managing accounts and transactions in a transfer system",
	InfoInstanceName: "swagger",
	SwaggerTemplate:  docTemplate,
	LeftDelim:        "{{",
	RightDelim:       "}}",
}

func init() {
	swag.Register(SwaggerInfo.InstanceName(), SwaggerInfo)
}
